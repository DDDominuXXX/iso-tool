#! /bin/sh


# This script handles the creation of the initial RAM disk.
# Every component needed for it to work should be built
# here: busybox, in this case.
# Don't mess up with the kernel modules here. The critical
# ones are compiled into the kernel, and that is done in
# the script `steps/kernel`. If you want to customize that,
# do it there.
# You MUST provide a working `init` in `build/initramfs/init`.
# Failing to do so will result in an unbootable image. The
# default will work good, so it's preferable that you don't
# touch it, except if you really know what you are doing.

# - - - Prepare the environment for `init`.

mkdir -p \
	build/initramfs/etc     \
	build/initramfs/bin     \
	build/initramfs/sbin    \
	build/initramfs/usr/    \
	build/initramfs/usr/bin \
	build/initramfs/usr/sbin


# - - - Build busybox or download a binary based on the url.

file=${busybox_url##*/}
source_dir=${file//.tar*}

[ ! -f build/initramfs/bin/busybox ] && get-file $busybox_url

chmod +x build/initramfs/init
chmod +x build/initramfs/bin/busybox

ln -sf /bin/busybox build/initramfs/bin/sh


# - - - Pack the initramfs.

cd build/initramfs
find . | cpio -R root:root -H newc -o | gzip > $WD/build/iso/boot/initramfs.gz
cd $WD
