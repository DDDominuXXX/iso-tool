#! /bin/sh

TITLE="znx GUI — Operating System Deployment Tool"

GetDevice () {
	echo $(kdialog \
		--style breeze \
		--title "$TITLE" \
		--combobox "Select a target device to continue." $(lsblk -npdlo NAME))
}

GetName () {
	echo $(kdialog \
		--style breeze \
		--title "$TITLE" \
		--inputbox "Name of ISO image to deploy." "nitrux/stable")
}

GetPath () {
	echo $(kdialog \
		--style breeze \
		--title "$TITLE" \
		--inputbox "Enter the path or the remote URL of the ISO file." "/home/user/nitrux.iso")
}

showSuccess () {
	kdialog \
		--style breeze \
		--title "Success — $TITLE" \
		--msgbox "$1"
}

showUnexpectedError () {
	kdialog \
		--style breeze \
		--title "Error — $TITLE" \
		--error "Unexpected Error Occurred. Run znx in a Terminal for verbose output."
}

showProgressDialog () {
	kdialog \
		--title "$TITLE" \
		--style breeze \
		--msgbox "Please Wait, this may take some time.\nYou can close this window. This program will inform you when the process completes." &
}

showTextDialog () {
	kdialog \
		--title "$TITLE" \
		--style breeze \
		--textbox /tmp/znx_output
}

Init () {
	echo "Initialize the storage device."

	if kdialog --style breeze --yesno "This will wipe your device. Do you wish to proceed?."; then
		DEVICE=$(GetDevice)

		showProgressDialog

		znx init $DEVICE &&
			showSuccess "Device initialized." ||
			showUnexpectedError
	fi
}

Restore () {
	echo "Restore the ESP (EFI System Partition) of the given device."

		DEVICE=$(GetDevice)

		showProgressDialog

		znx restore $DEVICE &&
			showSuccess "ESP (EFI System Partition) restored." ||
			showUnexpectedError
	fi
}

Deploy () {
	echo "Deploy an image on a storage device."

	DEVICE=$(GetDevice)
	IMAGENAME=$(GetName)
	IMAGEPATH=$(GetPath)

	showProgressDialog	

	znx deploy $DEVICE $IMAGENAME $IMAGEPATH &&
		showSuccess "Successfully deployed $IMAGENAME." ||
		showUnexpectedError
}

Update () {
	echo "Update the specified image."

	DEVICE=$(GetDevice)
	IMAGENAME=$(GetName)

	showProgressDialog

	znx update $DEVICE $IMAGENAME &&
		showSuccess "Successfully updated $IMAGENAME." ||
		showUnexpectedError
}

Revert () {	
	echo "Revert to the previous version of the image."

	DEVICE=$(GetDevice)
	IMAGENAME=$(GetName)
	IMAGEPATH=$(GetPath)

	showProgressDialog

	znx revert $DEVICE $IMAGENAME &&
		showSuccess "Successfully reverted $IMAGENAME." ||
		showUnexpectedError
}

Clean () {	
	echo "Remove the backup that is created during an update."

	DEVICE=$(GetDevice)
	IMAGENAME=$(GetName)

	showProgressDialog

	znx clean $DEVICE $IMAGENAME &&
		showSuccess "Successfully removed backup of $IMAGENAME." ||
		showUnexpectedError
}

Reset () {	
	echo "Delete all user data of the specified image."

	DEVICE=$(GetDevice)
	IMAGENAME=$(GetName)

	showProgressDialog

	znx reset $DEVICE $IMAGENAME &&
		showSuccess "Successfully cleaned user data of $IMAGENAME." ||
		showUnexpectedError
}

Remove () {	
	echo "Remove the specified image."

	DEVICE=$(GetDevice)
	IMAGENAME=$(GetName)

	showProgressDialog

	znx remove $DEVICE $IMAGENAME &&
		showSuccess "Successfully removed $IMAGENAME." ||
		showUnexpectedError
}

Stats () {	
	echo "Show statistics about the provided image."

	DEVICE=$(GetDevice)
	IMAGENAME=$(GetName)

	showTextDialog

	znx stats $DEVICE $IMAGENAME > /tmp/znx_output &&
			showSuccess "Displaying statistics of $IMAGENAME" ||
			showUnexpectedError
	fi
}

List () {	
	echo "List the deployed images."

	DEVICE=$(GetDevice)
	IMAGENAME=$(GetName)

	showTextDialog

	znx list $DEVICE > /tmp/znx_output &&
			showSuccess "The following ISO files were found in $DEVICE." ||
			showUnexpectedError
	fi
}

while :; do
	OPTIONS="0 init on \
	1 restore off \
	2 deploy off \
	3 update off \
	4 revert off \
	5 clean off \
	6 reset off \
	7 remove off \
	8 stats off \
	9 list off"

	INPUT_OPTION=$(kdialog \
					--style breeze \
					--title "$TITLE" \
					--radiolist "Select a command to continue" $OPTIONS)

	case "$INPUT_OPTION" in
		0)
			Init
		;;

		1)
			Restore
		;;

		2)
			Deploy
		;;

		3)
			Update
		;;

		4)
			Revert
		;;

		5)
			Clean
		;;

		6)
			Reset
		;;

		7)
			Remove
		;;

		8)
			Stats
		;;

		9)
			List
		;;

		*)
			break
		;;
	esac
done
